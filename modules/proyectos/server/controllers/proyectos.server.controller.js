'use strict';

/**
 * Module dependencies.
 */
var path = require('path'),
  mongoose = require('mongoose'),
  Proyecto = mongoose.model('Proyecto'),
  errorHandler = require(path.resolve('./modules/core/server/controllers/errors.server.controller')),
  _ = require('lodash');

/**
 * Create a Proyecto
 */
exports.create = function(req, res) {
  var proyecto = new Proyecto(req.body);
  proyecto.user = req.user;

  proyecto.save(function(err) {
    if (err) {
      return res.status(400).send({
        message: errorHandler.getErrorMessage(err)
      });
    } else {
      res.jsonp(proyecto);
    }
  });
};

/**
 * Show the current Proyecto
 */
exports.read = function(req, res) {
  // convert mongoose document to JSON
  var proyecto = req.proyecto ? req.proyecto.toJSON() : {};

  // Add a custom field to the Article, for determining if the current User is the "owner".
  // NOTE: This field is NOT persisted to the database, since it doesn't exist in the Article model.
  proyecto.isCurrentUserOwner = req.user && proyecto.user && proyecto.user._id.toString() === req.user._id.toString() ? true : false;

  res.jsonp(proyecto);
};

/**
 * Update a Proyecto
 */
exports.update = function(req, res) {
  var proyecto = req.proyecto ;

  proyecto = _.extend(proyecto , req.body);

  proyecto.save(function(err) {
    if (err) {
      return res.status(400).send({
        message: errorHandler.getErrorMessage(err)
      });
    } else {
      res.jsonp(proyecto);
    }
  });
};

/**
 * Delete an Proyecto
 */
exports.delete = function(req, res) {
  var proyecto = req.proyecto ;

  proyecto.remove(function(err) {
    if (err) {
      return res.status(400).send({
        message: errorHandler.getErrorMessage(err)
      });
    } else {
      res.jsonp(proyecto);
    }
  });
};

/**
 * List of Proyectos
 */
exports.list = function(req, res) { 
  Proyecto.find().sort('-created').populate('user', 'displayName').exec(function(err, proyectos) {
    if (err) {
      return res.status(400).send({
        message: errorHandler.getErrorMessage(err)
      });
    } else {
      res.jsonp(proyectos);
    }
  });
};

/**
 * Proyecto middleware
 */
exports.proyectoByID = function(req, res, next, id) {

  if (!mongoose.Types.ObjectId.isValid(id)) {
    return res.status(400).send({
      message: 'Proyecto is invalid'
    });
  }

  Proyecto.findById(id).populate('user', 'displayName').exec(function (err, proyecto) {
    if (err) {
      return next(err);
    } else if (!proyecto) {
      return res.status(404).send({
        message: 'No Proyecto with that identifier has been found'
      });
    }
    req.proyecto = proyecto;
    next();
  });
};
